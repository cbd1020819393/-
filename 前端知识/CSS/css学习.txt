## CSS简介

### CSS概述
1.CSS指层叠样式表（Casccding Style Sheets）
2.样式定义如何显示HTML元素
3.样式通常存储在样式表中
4.把样式添加到HTML4.0中，是为了解决内容与表现分离的问题
5.外部样式表可以极大提高工作效率
6.外部样式表通常存储在CSS文件中
7.多个样式定义可层叠为一

### 层叠次序
1.浏览器缺省设置
2.外部样式表
3.内部样式表（位于<head>标签内部）
4.内联样式（在HTML元素内部）

优先权 4>3>2>1

## CSS基础语法

### CSS语法
selector{declaration1;declaration2;...declarationN}
CSS规则由两个主要的部分构成：选择器，以及一条或多条声明。

selector{property:value}
属性（property）是您希望设置的样式属性。每个属性有一个值。
实现和值被冒号分开。

		属性 值      属性 值
h1    {color:red;font-size:14px;}
选择器   声明       声明

## CSS高级语法

### 选择器分组
可以对选择器进行分组，被分组的旋转器可以分享相同的声明。
例：h1,h2,h3,h4,h5,h6{
	color:green;
}

## CSS派生选择器
通过依据元素在其位置的上下文关系来定义样式，你可以使标记更加简洁。
例：
li strong {
    font-style: italic;
    font-weight: normal;
  }

  <p><strong>我是粗体字，不是斜体字，因为我不在列表当中，所以这个规则对我不起作用</strong></p>

<ol>
<li><strong>我是斜体字。这是因为 strong 元素位于 li 元素内。</strong></li>
<li>我是正常的字体。</li>
</ol>

## CSS id选择器
id选择器可以为标有特定id的HTML元素指定特定的样式。
id选择器以"#"来定义。

例：
#red {color:red;}
#green {color:green;}

<p id="red">这个段落是红色。</p>
<p id="green">这个段落是绿色。</p>

### id选择器和派生选择器
id选择器常常用于建立派生选择器
例：
#sidebar p{
	font-style:italic;
	text-align:right;
	margin-top:0.5em;
}

### 单独的选择器
id选择器即使不被用来创建派生选择器，它也可以独立发挥作用
例 #sidebar{
	 border：1px dotted #000;
	 padding:10px;
	}
	
## CSS类选择器
在CSS中，类选择器以一个点号显示：
.center{text-align:center}

和id一样，class也可被用作派生选择器：
.fancy td{
		color:#f60;
		background:#666;
		}
		
		
## CSS属性选择器
对带有指定属性的HTML元素设置样式。
可以为拥有指定属性的HTML元素设置样式，而不仅限于class和id属性。

### 属性选择器
例：为带有title属性的所有元素设置样式：
	[title]{
		color:red;
	}

### 属性何值选择器
例：为title="W3School"的所有元素设置样式：
[title=W3School]
{
 border:5px solid blue;
}

### 属性和值选择器-多个值
例：包含title属性的所有元素设置样式，适用于由空格分隔的属性值
[title~=hello]
{
	color=red;
}

包含title属性的所有元素设置样式，适用于由连字符分隔的属性值
[lang|=en]
{
	color=red;
}

### 设置表单的样式
属性选择器在为不带有class或id的表单设置样式时特别有用：
input[type="text"]
{
  width:150px;
  display:block;
  margin-bottom:10px;
  background-color:yellow;
  font-family: Verdana, Arial;
}

input[type="button"]
{
  width:120px;
  margin-left:35px;
  display:block;
  font-family: Verdana, Arial;
}

## 如何创建CSS
当读到一个样式表时，浏览器会根据它来格式化HTML文档，插入样式表的方法有三种

### 外部样式表
当样式需要应用于很多页面是，外部样式表将是理想的旋转，在使用外部样式表的情况下，你可以
通过改变一个文件来改变整个站点的外观，每个页面使用<link>标签链接到样式表。

### 内部样式表
当单个文档需要特殊的样式时，就应该使用内部样式表。可以使用<style>标签在文档头部定义内部样式表。
例：
<head>
<style type="text/css">
  hr {color: sienna;}
  p {margin-left: 20px;}
  body {background-image: url("images/back40.gif");}
</style>
</head>

### 内联样式
由于要将表现何内容混杂在一起，内联样式会损失掉样式表的许多优势。
例：
<p style="color: sienna; margin-left: 20px">
This is a paragraph
</p>

### 多重样式
如果某些属性在不同的样式表被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。

## CSS背景
CSS允许应用纯色作为背景，也允许使用背景图像创建相当复杂的效果。
CSS在这方面的能力远远在HTML之上。

### 背景色
可以使用background-color属性为元素这种背景色。这个属性接受任何合法的颜色值。
例：p {background-color: gray;}
	p {background-color: gray; padding: 20px;} 带内边距

### 背景图像
要把图像放入背景，需要使用background-image属性。
例：1.body{background-image:url(/i/test/gif)} 应用到body
	2.p.flower {background-image: url(/i/eg_bg_03.gif);} 为一个段落应用了一个背景
	3.a.radio {background-image: url(/i/eg_bg_07.gif);} 为行内元素设置背景图像
	
### 背景重复
如果需要在页面上对背景图进行平铺，可以使用background-repeat属性。
repeat-x导致图像在水平方向重复
repeat-y导致图像在垂直方向重复
no-repeat不允许图像咋任何方向上平铺

### 背景定位
可以利用background-position属性改变图像咋背景中的位置。
1.backgr-position的属性有top,bottom,left,right,center。
例：p
  { 
    background-image:url('bgimg.gif');
    background-repeat:no-repeat;
    background-position:top;
  }
2.百分数值
例：body
  { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:50% 50%;
  }
3.长度值
例：body
  { 
    background-image:url('/i/eg_bg_03.gif');
    background-repeat:no-repeat;
    background-position:50px 100px;
  }

### 背景关联
当文档比较长是，当文档向下滚动时，背景图像也会随之滚动。
当文档滚动到超过图像的位置时，图像就会消失。
可以是用backgroun-attachment属性防止滚动。
例：body 
  {
  background-image:url(/i/eg_bg_02.gif);
  background-repeat:no-repeat;
  background-attachment:fixed
  }
  
## CSS文本
CSS文本属性可定义文本的外观。
通过文本属性，您可以改变文本的颜色、字符间距、对齐文本、装饰文本，对文本进行缩进等等。

### 缩进文本
例：p{text-indent:5em;}
1.可以使用百分比值。
	例：p {text-indent: 20%;}
2.可以继承


### 水平对齐
text-align有left，right，center会导致元素中的文本分别左对齐、右对齐和居中。
center与<CENTER>的不同，center只针对文本，后者是会把整个元素居中。

### 字间隔
word-spacing属性可以改变字之间的标准间隔。
正长度值会让间隔增加，负长度值会让间隔拉近。

### 字母间隔
letter-spacing属性修改字符或字母之间的间隔。
正长度值会让间隔增加，负长度值会让间隔拉近。

### 字符转换
text-transform有四个属性
1.none 对文本不做任何改动。
2.uppercase 文本全大写。
3.lowercase 文本全小写。
4.capitalize 单词首字母大写。
	
### 文本装饰
text-decoration有五个属性
1.none 去掉所有装饰。
2.underline 加下划线。
3.overline 上划线。
4.line-through 文本中间画一个贯穿线。
5.blink 让文本闪烁。

### 处理空白符
white-space属性可以处理文档中的空格、换行和tab字符的处理。
1.white-space：normal 空白符会被忽略，换行会转成空格，变成一个空格。
2.white-space：pre 空白符不会被忽略。
3.white-space: nowrap 防止文本换行。
4.white-space:pre-wrap 空白符保留，会换行。
5.white-space:pre-line 
